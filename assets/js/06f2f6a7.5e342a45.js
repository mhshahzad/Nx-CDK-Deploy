"use strict";(self.webpackChunknx_cdk_plugin_docs=self.webpackChunknx_cdk_plugin_docs||[]).push([[6109],{3057:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=n(8168),a=(n(6540),n(5680));const o={sidebar_position:4},i="Worker Service Preset",s={unversionedId:"presets/worker-service",id:"presets/worker-service",title:"Worker Service Preset",description:"The Worker Service preset creates a background processing service with Lambda functions, SQS queues, and DynamoDB for task management.",source:"@site/docs/presets/worker-service.md",sourceDirName:"presets",slug:"/presets/worker-service",permalink:"/Nx-CDK-Deploy/docs/presets/worker-service",draft:!1,editUrl:"https://github.com/mhshahzad/nx-cdk-deploy/tree/main/docs/docs/presets/worker-service.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Storage Service Preset",permalink:"/Nx-CDK-Deploy/docs/presets/storage-service"},next:{title:"Custom Preset",permalink:"/Nx-CDK-Deploy/docs/presets/custom-preset"}},l={},c=[{value:"Architecture",id:"architecture",level:2},{value:"Generated resources",id:"generated-resources",level:2},{value:"Typical event flow",id:"typical-event-flow",level:2},{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Extend with resource bundles",id:"extend-with-resource-bundles",level:2},{value:"Operations and scaling",id:"operations-and-scaling",level:2},{value:"Related",id:"related",level:2}],p={toc:c},u="wrapper";function d({components:e,...r}){return(0,a.yg)(u,(0,t.A)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"worker-service-preset"},"Worker Service Preset"),(0,a.yg)("p",null,"The Worker Service preset creates a background processing service with Lambda functions, SQS queues, and DynamoDB for task management."),(0,a.yg)("h2",{id:"architecture"},"Architecture"),(0,a.yg)("h2",{id:"generated-resources"},"Generated resources"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"SQS queue(s) for work dispatch"),(0,a.yg)("li",{parentName:"ul"},"Optional DLQ for failures"),(0,a.yg)("li",{parentName:"ul"},"Lambda consumer(s) for background processing"),(0,a.yg)("li",{parentName:"ul"},"Optional DynamoDB table for persistence/state"),(0,a.yg)("li",{parentName:"ul"},"Necessary IAM permissions and event source mappings")),(0,a.yg)("h2",{id:"typical-event-flow"},"Typical event flow"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"A producer (API, scheduler, or another service) enqueues a job to SQS"),(0,a.yg)("li",{parentName:"ol"},"Lambda consumer picks messages in batches"),(0,a.yg)("li",{parentName:"ol"},"Handler processes the job and writes results to DynamoDB/S3 or publishes follow-up events"),(0,a.yg)("li",{parentName:"ol"},"Failed messages go to DLQ for inspection and retries")),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("p",null,"Generate a worker service:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"nx g @mhshahzad/nx-cdk-deploy:preset --name=jobs --preset=worker-service\n")),(0,a.yg)("p",null,"Deploy to an environment:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"nx deploy jobs --configuration=dev\n")),(0,a.yg)("h2",{id:"configuration"},"Configuration"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Queue name, visibility timeout, batch size"),(0,a.yg)("li",{parentName:"ul"},"DLQ enablement and retention period"),(0,a.yg)("li",{parentName:"ul"},"Concurrency limits and reserved concurrency for Lambda"),(0,a.yg)("li",{parentName:"ul"},"Environment variables for handler behavior")),(0,a.yg)("p",null,"Configure per environment via project config and ",(0,a.yg)("inlineCode",{parentName:"p"},".env.*")," files:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"See ",(0,a.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/configuration/project-config"},"Project Config")),(0,a.yg)("li",{parentName:"ul"},"See ",(0,a.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/configuration/environment-variables"},"Environment Variables"))),(0,a.yg)("h2",{id:"extend-with-resource-bundles"},"Extend with resource bundles"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Add a table for job state: ",(0,a.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/generators/dynamodb"},"DynamoDB")),(0,a.yg)("li",{parentName:"ul"},"Publish/consume domain events: ",(0,a.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/generators/sns-sqs"},"SNS/SQS")),(0,a.yg)("li",{parentName:"ul"},"Store artifacts/results: ",(0,a.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/generators/s3"},"S3"))),(0,a.yg)("h2",{id:"operations-and-scaling"},"Operations and scaling"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Use DLQ alarms and metrics for failure visibility"),(0,a.yg)("li",{parentName:"ul"},"Tune batch size and concurrency to match downstream capacity"),(0,a.yg)("li",{parentName:"ul"},"Prefer idempotent handlers to safely retry"),(0,a.yg)("li",{parentName:"ul"},"Tag resources for cost and ownership")),(0,a.yg)("h2",{id:"related"},"Related"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/presets/overview"},"Presets Overview")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/presets/custom-preset"},"Custom Preset")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/examples/adding-resources"},"Examples: Adding Resources")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/examples/ci-cd-pipeline"},"CI/CD Pipeline"))))}d.isMDXComponent=!0},5680:(e,r,n)=>{n.d(r,{xA:()=>p,yg:()=>g});var t=n(6540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach(function(r){a(e,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))})}return e}function s(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),c=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},p=function(e){var r=c(e.components);return t.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},y=t.forwardRef(function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),y=a,g=u["".concat(l,".").concat(y)]||u[y]||d[y]||o;return n?t.createElement(g,i(i({ref:r},p),{},{components:n})):t.createElement(g,i({ref:r},p))});function g(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);