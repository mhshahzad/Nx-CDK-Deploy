"use strict";(self.webpackChunknx_cdk_plugin_docs=self.webpackChunknx_cdk_plugin_docs||[]).push([[3346],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var r=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach(function(n){o(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef(function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=o,m=u["".concat(s,".").concat(d)]||u[d]||g[d]||a;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))});function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7743:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(8168),o=(t(6540),t(5680));const a={sidebar_position:4},i="Environment Management",l={unversionedId:"core-concepts/environment-management",id:"core-concepts/environment-management",title:"Environment Management",description:"Environment-aware configurations ensure your infrastructure adapts to different deployment stages with appropriate settings for development, staging, and production environments.",source:"@site/docs/core-concepts/environment-management.md",sourceDirName:"core-concepts",slug:"/core-concepts/environment-management",permalink:"/Nx-CDK-Deploy/docs/core-concepts/environment-management",draft:!1,editUrl:"https://github.com/mhshahzad/nx-cdk-deploy/tree/main/docs/docs/core-concepts/environment-management.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Resource Bundles",permalink:"/Nx-CDK-Deploy/docs/core-concepts/resource-bundles"},next:{title:"Presets Overview",permalink:"/Nx-CDK-Deploy/docs/presets/overview"}},s={},c=[{value:"Environment Context Files",id:"environment-context-files",level:2},{value:"Project configuration (recommended)",id:"project-configuration-recommended",level:3},{value:"Example: project.json with configurations",id:"example-projectjson-with-configurations",level:3},{value:"Example: cdk.json context (optional)",id:"example-cdkjson-context-optional",level:3},{value:"Environment Variables and .env Files",id:"environment-variables-and-env-files",level:2},{value:"CDK Bootstrap per Account/Region",id:"cdk-bootstrap-per-accountregion",level:2},{value:"Deploy per Environment",id:"deploy-per-environment",level:2},{value:"CI/CD Considerations",id:"cicd-considerations",level:2},{value:"Best Practices",id:"best-practices",level:2}],p={toc:c},u="wrapper";function g({components:e,...n}){return(0,o.yg)(u,(0,r.A)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"environment-management"},"Environment Management"),(0,o.yg)("p",null,"Environment-aware configurations ensure your infrastructure adapts to different deployment stages with appropriate settings for development, staging, and production environments."),(0,o.yg)("h2",{id:"environment-context-files"},"Environment Context Files"),(0,o.yg)("p",null,"Each environment has its own context file:"),(0,o.yg)("h3",{id:"project-configuration-recommended"},"Project configuration (recommended)"),(0,o.yg)("p",null,"Keep per-environment settings in your project config and reference them from your CDK app."),(0,o.yg)("p",null,"See:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/configuration/project-config"},"Project Config")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/configuration/environment-variables"},"Environment Variables"))),(0,o.yg)("h3",{id:"example-projectjson-with-configurations"},"Example: project.json with configurations"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "orders",\n  "targets": {\n    "deploy": {\n      "executor": "@mhshahzad/nx-cdk-deploy:deploy",\n      "options": {\n        "stack": "orders"\n      },\n      "configurations": {\n        "dev": {\n          "account": "111111111111",\n          "region": "us-east-1"\n        },\n        "staging": {\n          "account": "222222222222",\n          "region": "us-east-1"\n        },\n        "prod": {\n          "account": "333333333333",\n          "region": "us-east-2"\n        }\n      }\n    }\n  }\n}\n')),(0,o.yg)("p",null,"Your CDK app can read these values (e.g., via context or env vars) to select the right AWS environment."),(0,o.yg)("h3",{id:"example-cdkjson-context-optional"},"Example: cdk.json context (optional)"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "app": "npx ts-node --prefer-ts-exts src/main.ts",\n  "context": {\n    "orders:dev": { "account": "111111111111", "region": "us-east-1" },\n    "orders:staging": { "account": "222222222222", "region": "us-east-1" },\n    "orders:prod": { "account": "333333333333", "region": "us-east-2" }\n  }\n}\n')),(0,o.yg)("p",null,"In CI or locally, pass a selector (e.g., configuration name) that your app uses to look up the correct context."),(0,o.yg)("h2",{id:"environment-variables-and-env-files"},"Environment Variables and .env Files"),(0,o.yg)("p",null,"Use ",(0,o.yg)("inlineCode",{parentName:"p"},".env")," files to store per-env values like table throughput, DLQ retention, API stage names."),(0,o.yg)("p",null,"Common patterns:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},".env")," (defaults)"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},".env.dev"),", ",(0,o.yg)("inlineCode",{parentName:"li"},".env.staging"),", ",(0,o.yg)("inlineCode",{parentName:"li"},".env.prod"))),(0,o.yg)("p",null,"Your CDK code can load these with your preferred dotenv mechanism. See:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/Nx-CDK-Deploy/docs/configuration/environment-variables"},"Environment Variables"))),(0,o.yg)("h2",{id:"cdk-bootstrap-per-accountregion"},"CDK Bootstrap per Account/Region"),(0,o.yg)("p",null,"Run once per account+region pair:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"cdk bootstrap aws://<ACCOUNT_ID>/<REGION>\n")),(0,o.yg)("p",null,"Examples:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"cdk bootstrap aws://111111111111/us-east-1   # dev\ncdk bootstrap aws://222222222222/us-east-1   # staging\ncdk bootstrap aws://333333333333/us-east-2   # prod\n")),(0,o.yg)("h2",{id:"deploy-per-environment"},"Deploy per Environment"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"nx deploy orders --configuration=dev\nnx deploy orders --configuration=staging\nnx deploy orders --configuration=prod\n")),(0,o.yg)("p",null,"The deploy executor synthesizes and deploys to the specified AWS environment."),(0,o.yg)("h2",{id:"cicd-considerations"},"CI/CD Considerations"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Use OIDC to assume roles securely in CI."),(0,o.yg)("li",{parentName:"ul"},"Parameterize the environment via job matrices (dev/staging/prod)."),(0,o.yg)("li",{parentName:"ul"},"Cache Nx/Node modules to speed up builds.")),(0,o.yg)("p",null,"See: ",(0,o.yg)("a",{parentName:"p",href:"/Nx-CDK-Deploy/docs/examples/ci-cd-pipeline"},"CI/CD Pipeline Example")),(0,o.yg)("h2",{id:"best-practices"},"Best Practices"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Isolation"),": separate accounts for dev/staging/prod."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Naming"),": include environment in resource names (e.g., ",(0,o.yg)("inlineCode",{parentName:"li"},"orders-dev-table"),")."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Policies"),": apply least-privilege IAM per environment."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Config drift"),": keep all env config in code; avoid manual console edits."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Cost controls"),": use smaller capacities in non-prod; enable TTL/retention where possible.")))}g.isMDXComponent=!0}}]);